# Generated by Django 3.1.2 on 2020-12-05 20:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('picture', models.CharField(default='pic1', max_length=100)),
                ('theme', models.CharField(default='theme1', max_length=100)),
                ('phone', models.CharField(default='123-456-7890', max_length=100)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OpusTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('picture', models.CharField(default='pic1', max_length=100)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.Permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='SoloEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='New Event', max_length=100)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('details', models.CharField(default='This event is blah blah blah..', max_length=100)),
                ('picture', models.CharField(default='pic1', max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userEvent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleTimeFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(choices=[('sunday', 'SUNDAY'), ('monday', 'MONDAY'), ('tuesday', 'TUESDAY'), ('wednesday', 'WEDNESDAY'), ('thursday', 'THURSDAY'), ('friday', 'FRIDAY'), ('saturday', 'SATURDAY')], default=('sunday', 'SUNDAY'), max_length=15)),
                ('start', models.TimeField()),
                ('end', models.TimeField()),
                ('team', models.ManyToManyField(related_name='scheduletimeframeteams', to='main.OpusTeam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduletimeframeuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OpusClique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('picture', models.CharField(default='pic1', max_length=100)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.Permission', verbose_name='permissions')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cliquesTeam', to='main.opusteam')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inviteeEmail', models.CharField(default='asdf@example.com', max_length=100)),
                ('dateInvited', models.DateTimeField()),
                ('code', models.CharField(max_length=6, unique=True)),
                ('clique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cliqueInvitation', to='main.opusclique')),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inviter', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamInvitation', to='main.opusteam')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='event', max_length=100)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('details', models.CharField(default='This event is blah blah blah..', max_length=100)),
                ('picture', models.CharField(default='pic1', max_length=100)),
                ('clique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cliqueEvent', to='main.opusclique')),
                ('invited', models.ManyToManyField(related_name='eventInvited', to=settings.AUTH_USER_MODEL)),
                ('notGoing', models.ManyToManyField(related_name='notGoing', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamEvent', to='main.opusteam')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement', models.CharField(default='"Do your hw" -management', max_length=100)),
                ('clique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clique_announcement', to='main.opusclique')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_announcement', to='main.event')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamevent', to='main.opusteam')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='cliques',
            field=models.ManyToManyField(related_name='opusCliques', to='main.OpusTeam'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='teams',
            field=models.ManyToManyField(related_name='opusTeams', to='main.OpusTeam'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
